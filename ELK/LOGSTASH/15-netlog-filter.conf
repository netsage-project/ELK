filter {
  if [type] == "netflowOneDay" {
      grok {
        match => { "message" => "%{TIMESTAMP_ISO8601:date_start}[,]%{TIMESTAMP_ISO8601:date_end}[,]%{BASE10NUM:td}[,]%{DATA:source_ip}[,]%{DATA:dest_ip}[,]%{INT:source_port}[,]%{INT:dest_port}[,]%{WORD:protocol}[,]%{DATA:flg}[,]%{BASE10NUM:fwd}[,]%{BASE10NUM:stos}[,]%{BASE10NUM:input_packet}[,]%{BASE10NUM:input_byte}[,]%{BASE10NUM:output_packet}[,]%{BASE10NUM:output_byte}[,]%{BASE10NUM:in}[,]%{BASE10NUM:out}[,]%{INT:sas}[ ,]%{INT:das}"
        }
    }

      mutate {
          add_field => { "sasname" => "%{sas}" }
	  add_field => { "dasname" => "%{das}" }
    	}

      translate{ 
        field => "sas" 
        destination => "sasname"
        override => "true"
	dictionary_path => "/etc/logstash/dict.yaml"
	} 
      translate{
        field => "das"
        destination => "dasname"
        override => "true"
        dictionary_path => "/etc/logstash/dict.yaml"
        }
}

  if [type] == "asaggregation" {
      grok {
        match => { "message" => "%{TIMESTAMP_ISO8601:date_start}[,]%{POSINT:as_sas}[,]%{POSINT:as_das}[,]%{BASE10NUM:as_byte}"
        }
    }

      mutate {
          
          add_field => { "as_sasname" => "%{as_sas}" }
          add_field => { "as_dasname" => "%{as_das}" }
        }

      translate{
        field => "as_sas"
        destination => "as_sasname"
        override => "true"
        dictionary_path => "/etc/logstash/dict.yaml"
        }
      translate{
        field => "as_das"
        destination => "as_dasname"
        override => "true"
        dictionary_path => "/etc/logstash/dict.yaml"
        }
}


if [type] == "flowprofile_tuple" {
    grok {
      match => { "message" => "%{TIMESTAMP_ISO8601:date_start}[,]%{NUMBER:time_duration}[,]%{IP:source_ip_flowpro}[,]%{IP:dest_ip_flowpro}[,]%{INT:source_port_flowpro}[,]%{INT:dest_port_flowpro}[,]%{WORD:protocol_flowpro}[,]%{BASE10NUM:input_byte_flowpro}[,]%{BASE10NUM:bytes_per_second}" }
    }
  }

}
